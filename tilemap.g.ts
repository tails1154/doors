// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "door3":
            case "level3":return tiles.createTilemap(hex``, img`
..................................................
..................................................
..................................................
..................................................
...........................2222222222222222.......
..........................22..............22......
........................22.....22222222....22.....
2222222222222........222....2222......2222..22....
2.222.......2.......22....222.............2..2....
2.222.22222.2.......2....22...............2..22...
2.....22..2.222.....2...22.................2..22..
2222222...2...2222222..22..................2...22.
..........22..........22....................22..22
..........2222222222222......................22.2.
..............................................2.2.
..............................................222.
`, [myTiles.transparency16,myTiles.tile1,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleRedCrystal,myTiles.tile2], TileScale.Sixteen);
            case "door5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 . . . . . . . 
. . . . . . 2 2 2 . . . . . . . 
. . . . . . 2 . 2 . . . . . . . 
. . . . . . 2 . 2 . . . . . . . 
. . . . . . 2 . 2 . . . . . . . 
. . . . . . 2 . 2 2 2 . . . . . 
. . . . . . 2 . . 2 2 . . . . . 
. . . . . . 2 . 2 2 2 . . . . . 
. . . . . . 2 . 2 . . . . . . . 
. . . . . . 2 . 2 . . . . . . . 
. . . . . . 2 2 2 . . . . . . . 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.darkGroundCenter], TileScale.Sixteen);
            case "dooridk":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 2 2 2 2 2 . . . . . . . . 
. . . 2 2 2 2 2 . . . . . . . . 
. . . 2 2 2 2 2 . . . . . . . . 
. . . 2 . . . 2 . . . . . . . . 
. . . 2 . 2 2 2 . . . . . . . . 
. . . 2 . 2 2 2 . . . . . . . . 
. . . 2 . 2 2 2 . . . . . . . . 
. . . 2 . 2 2 2 . . . . . . . . 
. . . 2 . 2 2 2 . . . . . . . . 
. . . 2 . 2 . . . . . . . . . . 
. . . 2 2 2 . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "door1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . 2 2 2 2 2 2 2 . . . . 
. . . . . 2 2 2 . 2 2 2 . . . . 
. . . . . 2 . . . . . 2 . . . . 
. . . . . 2 . . . . . 2 . . . . 
. . . . . 2 . . . . . 2 . . . . 
. . . . . 2 . . . . 2 2 . . . . 
. . . . . 2 . . . . . 2 . . . . 
. . . . . 2 . . . . . 2 . . . . 
. . . . . 2 2 . . . . 2 . . . . 
. . . . . 2 . . . . 2 2 . . . . 
. . . . . 2 . . . . 2 . . . . . 
. . . . . 2 . . . . 2 . . . . . 
. . . . . 2 . . . . 2 . . . . . 
. . . . . 2 . . . . 2 . . . . . 
. . . . . 2 . . . . 2 . . . . . 
. . . . . 2 . . . . 2 . . . . . 
. . . . . 2 . . . . 2 . . . . . 
. . . . . 2 2 2 2 2 2 . . . . . 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleInsignia,sprites.dungeon.collectibleRedCrystal,myTiles.tile1,myTiles.tile2,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "door2":
            case "level2":return tiles.createTilemap(hex``, img`
..............2222..
..............2.22..
.............22.22..
............22..22..
...........22...2...
..........22..22....
.........22...2.....
........22...2......
.....222....22......
..2222......22......
2222........2.......
22.........22.......
2....22222222.......
2....2..............
2....2..............
222222..............
`, [myTiles.transparency16,myTiles.tile1,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.darkGroundCenter,myTiles.tile2,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "levelseek":
            case "levelseek1":return tiles.createTilemap(hex`1e001e`, img`
2222222222222222..............
2..............222222222......
2......................2......
2..............22222.222......
2..............22222.222......
2..............22222.222......
22............222222.222......
22............22...2.2........
22............22...2.2........
22............22...2.2........
22............22...2.2........
22............22...2.2........
22............22...2.2........
22............22...2.2........
22............22...2..2.......
2222222222222222...2..2.......
..................22..2.......
...............22222.22.......
.........2222222......2.......
..........222222......2.......
..........22.........22.......
..........222222222222........
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile5,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleRedCrystal,myTiles.tile2], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "door":
            case "tile1":return tile1;
            case "myTile0":
            case "tile3":return tile3;
            case "closet":
            case "tile2":return tile2;
            case "tile4":return tile4;
            case "seekactivator":
            case "tile5":return tile5;
            case "tile6":return tile6;
            case "tile7":return tile7;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
